name: API Test & Deploy

on:
  push:
    branches:
      - master
      - develop
    paths:
      - '**.py'
  pull_request:
    branches:
      - master
      - develop
    paths:
      - '**.py'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
          image: postgres:15
          env:
              POSTGRES_USER: shive
              POSTGRES_PASSWORD: shive
              POSTGRES_DB: test_shive
          ports: ['5432:5432']
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: postgres://shive:shive@localhost:5432/test_shive
          TEST_DATABASE_URL: postgres://shive:shive@localhost:5432/test_shive
        run: pytest .

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: test  # We choose to focus on functionality first, so we only lint if the tests pass successfully

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8 api/

      - name: Lint with black
        run: black --check api/

      - name: Lint with isort
        run: isort --check-only api/